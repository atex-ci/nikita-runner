name: manual-build

on:  
  workflow_dispatch:
    inputs:
      GIT_BRANCH:
        description: 'branch to clone'     
        required: true
        default: 'main'
      ENVIRONMENT:
        description: 'deploy to'     
        required: true
        default: 'demo1'
      SKIP_TESTS:
        description: 'Skip test phase'     
        required: true
        default: 'false'

jobs:

  main:
    runs-on: ubuntu-latest
    env:
      SENTRY_AUTH_TOKEN: "${{ secrets.SENTRY_AUTH_TOKEN}}"
      
    steps:
      - name: checkout
        run: |
          pwd
          git config --global http.sslverify false
          git clone --branch "${{ github.event.inputs.GIT_BRANCH}}" "https://${{ github.repository_owner }}:${{ secrets.GH_PASSWORD }}@github.com/atex-ci/nikita.git" .
          ls -la
          
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}-v1
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Setup nx cache
        uses: actions/cache/restore@v3
        with:
          path: |
            .nx
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx/**') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Install dependencies
        run: pnpm install

      - name: Get Current Job Log URL
        uses: Tiryoh/gha-jobid-action@v0
        id: jobs
        with:
          github_token: ${{ secrets.GH_PASSWORD }}
          job_name: ${{ github.job }}

      - name: ensure aws cli is present
        run: |
          aws --version

      - name: authenticate aws cli
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY}}"
          
      - name: BUILD
        run: |
          ./shared/build/boot.sh "${{ github.event.inputs.GIT_BRANCH}}" "${{ steps.jobs.outputs.html_url }}" "${{ github.event.inputs.ENVIRONMENT }}" "${{ secrets.SALT }}" "${{ github.event.inputs.SKIP_TESTS}}"

      - name: CLeaning NX cache
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ runner.os }}-nx-" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
    
      - name: Caching nx
        uses: actions/cache/save@v3
        with:
            path: |
              .nx
            key: ${{ runner.os }}-nx-
