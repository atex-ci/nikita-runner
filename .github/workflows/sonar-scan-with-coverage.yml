name: sonar-scan-with-coverage

on:  
  workflow_dispatch:
    inputs:      
      REPOSITORY:
        description: 'Repository to analyze (e.g. nikita)'
        default: 'nikita' #
        type: string
      GIT_BRANCH:
        description: 'branch to clone'     
        required: true
        default: 'main'
      PROJECT_KEY:
        description: 'Sonarqube Project Key'     
        required: true
        default: 'mytype'

jobs:
  sonarqube:
    name: Sonarqube Scan
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: checkout
        run: |
          pwd
          git config --global http.sslverify false
          git clone --branch "${{ github.event.inputs.GIT_BRANCH}}" "https://${{ github.repository_owner }}:${{ secrets.GH_PASSWORD }}@github.com/atex-ci/nikita.git" .
          ls -la

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Setup pnpm
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Restore cached pnpm dependencies
        id: cache-dependencies-restore
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Delete Previous Cache
        if: ${{ steps.cache-dependencies-restore.outputs.cache-hit }}
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GH_PASSWORD }}          
      
      - name: Cache pnpm dependencies
        id: cache-dependencies-save
        uses: actions/cache/save@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      
      - uses: nrwl/nx-set-shas@v3
      
      - name: Get Current Job Log URL
        uses: Tiryoh/gha-jobid-action@v0
        id: jobs
        with:
          github_token: ${{ secrets.GH_PASSWORD }}
          job_name: ${{ github.job }}

      - name: Modify nx.json to skip build dependencies for tests
        run: |
          # Backup originale
          cp nx.json nx.json.backup
          
          # Rimuove "build" dalle dipendenze del target test, mantiene solo "^build"
          jq '.targetDefaults.test.dependsOn = ["^build"]' nx.json > nx.json.tmp && mv nx.json.tmp nx.json
          
          echo "Modified nx.json test dependencies:"
          jq '.targetDefaults.test.dependsOn' nx.json

      - name: Run Tests
        run: npx nx run-many --target=test --coverage --parallel
      
      - name: Convert Istanbul to LCOV
        run: |
          npm install -g nyc
          
          # Per ogni progetto
          for dir in adapters/desk-adapter adapters/wp-adapter apps/installer; do
            if [ -f "$dir/coverage/coverage-final.json" ]; then
              echo "Converting $dir..."
              cd "$dir"
              mkdir -p .nyc_output
              cp coverage/coverage-final.json .nyc_output/out.json
              nyc report --reporter=lcov --report-dir=coverage
              cd - > /dev/null
            fi
          done
          
          # Chek
          find . -name "lcov.info" -type f

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          # TODO: Temporarily disable coverage check
          SONAR_SCANNER_OPTS: >
            -Dsonar.projectKey=mytype
            -Dsonar.projectName=mytype
            -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info
            -Dsonar.coverage.new_code.disabled=true
            -Dsonar.coverage.overall.disabled=true

      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}